# Copyright (c) 2017 Hanspeter Portner (dev@open-music-kontrollers.ch)
#
# This is free software: you can redistribute it and/or modify
# it under the terms of the Artistic License 2.0 as published by
# The Perl Foundation.
#
# This source is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# Artistic License 2.0 for more details.
#
# You should have received a copy of the Artistic License 2.0
# along the source as a COPYING file. If not, obtain it from
# http://www.perlfoundation.org/artistic_license_2_0.

@prefix foaf:	<http://xmlns.com/foaf/0.1/> .
@prefix doap:	<http://usefulinc.com/ns/doap#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix lv2: <http://lv2plug.in/ns/lv2core#> .
@prefix atom: <http://lv2plug.in/ns/ext/atom#> .
@prefix urid: <http://lv2plug.in/ns/ext/urid#> .
@prefix log: <http://lv2plug.in/ns/ext/log#> .
@prefix midi: <http://lv2plug.in/ns/ext/midi#> .
@prefix state: <http://lv2plug.in/ns/ext/state#> .
@prefix rsz: <http://lv2plug.in/ns/ext/resize-port#> .
@prefix time: <http://lv2plug.in/ns/ext/time#> .
@prefix patch: <http://lv2plug.in/ns/ext/patch#> .
@prefix units: <http://lv2plug.in/ns/extensions/units#> .
@prefix work: <http://lv2plug.in/ns/ext/worker#> .
@prefix pset: <http://lv2plug.in/ns/ext/presets#> .

@prefix lic: <http://opensource.org/licenses/> .
@prefix omk: <http://open-music-kontrollers.ch/ventosus#> .
@prefix proj:	<http://open-music-kontrollers.ch/lv2/> .
@prefix vm: <http://open-music-kontrollers.ch/lv2/vm#> .

# Maintainer
omk:me
	a foaf:Person ;
	foaf:name "Hanspeter Portner" ;
	foaf:mbox <mailto:dev@open-music-kontrollers.ch> ;
	foaf:homepage <http://open-music-kontrollers.ch> .

# Project
proj:vm
	a doap:Project ;
	doap:maintainer omk:me ;
	doap:name "VM Bundle" .

# Parameters
vm:graph
	a lv2:Parameter ;
	rdfs:range atom:Tuple ;
	rdfs:label "Graph" ;
	rdfs:comment "vm graph tuple" .

vm:opInput
	a rdfs:Datatype .
vm:opPush
	a rdfs:Datatype .
vm:opPop
	a rdfs:Datatype .
vm:opSwap
	a rdfs:Datatype .
vm:opStore
	a rdfs:Datatype .
vm:opLoad
	a rdfs:Datatype .
vm:opBreak
	a rdfs:Datatype .
#vm:opGoto
#	a rdfs:Datatype .

vm:opRand
	a rdfs:Datatype .

vm:opAdd
	a rdfs:Datatype .
vm:opSub
	a rdfs:Datatype .
vm:opMul
	a rdfs:Datatype .
vm:opDiv
	a rdfs:Datatype .
vm:opMod
	a rdfs:Datatype .
vm:opPow
	a rdfs:Datatype .

vm:opNeg
	a rdfs:Datatype .
vm:opAbs
	a rdfs:Datatype .
vm:opSqrt
	a rdfs:Datatype .
vm:opCbrt
	a rdfs:Datatype .

vm:opFloor
	a rdfs:Datatype .
vm:opCeil
	a rdfs:Datatype .
vm:opRound
	a rdfs:Datatype .
vm:opRint
	a rdfs:Datatype .
vm:opTrunc
	a rdfs:Datatype .
vm:opModF
	a rdfs:Datatype .

vm:opExp
	a rdfs:Datatype .
vm:opExp2
	a rdfs:Datatype .
vm:opLDExp
	a rdfs:Datatype .
vm:opFRExp
	a rdfs:Datatype .
vm:opLog
	a rdfs:Datatype .
vm:opLog2
	a rdfs:Datatype .
vm:opLog10
	a rdfs:Datatype .

vm:opPi
	a rdfs:Datatype .
vm:opSin
	a rdfs:Datatype .
vm:opCos
	a rdfs:Datatype .
vm:opTan
	a rdfs:Datatype .
vm:opASin
	a rdfs:Datatype .
vm:opACos
	a rdfs:Datatype .
vm:opATan
	a rdfs:Datatype .
vm:opATan2
	a rdfs:Datatype .
vm:opSinH
	a rdfs:Datatype .
vm:opCosH
	a rdfs:Datatype .
vm:opTanH
	a rdfs:Datatype .
vm:opASinH
	a rdfs:Datatype .
vm:opACosH
	a rdfs:Datatype .
vm:opATanH
	a rdfs:Datatype .

vm:opEq
	a rdfs:Datatype .
vm:opLt
	a rdfs:Datatype .
vm:opGt
	a rdfs:Datatype .
vm:opLe
	a rdfs:Datatype .
vm:opGe
	a rdfs:Datatype .
vm:opTernary
	a rdfs:Datatype .
vm:opMin
	a rdfs:Datatype .
vm:opMax
	a rdfs:Datatype .

vm:opAnd
	a rdfs:Datatype .
vm:opOr
	a rdfs:Datatype .
vm:opNot
	a rdfs:Datatype .

vm:opBAnd
	a rdfs:Datatype .
vm:opBOr
	a rdfs:Datatype .
vm:opBNot
	a rdfs:Datatype .
vm:opLShift
	a rdfs:Datatype .
vm:opRShift
	a rdfs:Datatype .

# Plugin
vm:control
	a lv2:Plugin,
		lv2:ConverterPlugin ;
	doap:name "VM Control" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:vm ;
	lv2:requiredFeature urid:map, work:schedule, state:loadDefaultState ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, log:log, state:threadSafeRestore ;
	lv2:extensionData state:interface, work:interface ;

	lv2:port [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports time:Position	,
			patch:Message ;
		lv2:index 0 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		lv2:designation lv2:control ;
		rsz:minimumSize 8192 ;
	] , [
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message ;
		lv2:index 1 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		lv2:designation lv2:control ;
		rsz:minimumSize 8192 ;
	] , [
	  a lv2:InputPort,
			lv2:ControlPort;
		lv2:index 2 ;
		lv2:symbol "control_in_0" ;
		lv2:name "Control In 0" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:ControlPort;
		lv2:index 3 ;
		lv2:symbol "control_in_1" ;
		lv2:name "Control In 1" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:ControlPort;
		lv2:index 4 ;
		lv2:symbol "control_in_2" ;
		lv2:name "Control In 2" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:ControlPort;
		lv2:index 5 ;
		lv2:symbol "control_in_3" ;
		lv2:name "Control In 3" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:ControlPort;
		lv2:index 6 ;
		lv2:symbol "control_in_4" ;
		lv2:name "Control In 4" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:ControlPort;
		lv2:index 7 ;
		lv2:symbol "control_in_5" ;
		lv2:name "Control In 5" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:ControlPort;
		lv2:index 8 ;
		lv2:symbol "control_in_6" ;
		lv2:name "Control In 6" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:ControlPort;
		lv2:index 9 ;
		lv2:symbol "control_in_7" ;
		lv2:name "Control In 7" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:OutputPort,
			lv2:ControlPort;
		lv2:index 10 ;
		lv2:symbol "control_out_0" ;
		lv2:name "Control Out 0" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:ControlPort;
		lv2:index 11 ;
		lv2:symbol "control_out_1" ;
		lv2:name "Control Out 1" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:ControlPort;
		lv2:index 12 ;
		lv2:symbol "control_out_2" ;
		lv2:name "Control Out 2" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:ControlPort;
		lv2:index 13 ;
		lv2:symbol "control_out_3" ;
		lv2:name "Control Out 3" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:ControlPort;
		lv2:index 14 ;
		lv2:symbol "control_out_4" ;
		lv2:name "Control Out 4" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:ControlPort;
		lv2:index 15 ;
		lv2:symbol "control_out_5" ;
		lv2:name "Control Out 5" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:ControlPort;
		lv2:index 16 ;
		lv2:symbol "control_out_6" ;
		lv2:name "Control Out 6" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:ControlPort;
		lv2:index 17 ;
		lv2:symbol "control_out_7" ;
		lv2:name "Control Out 7" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] ;

	#patch:writable
	#	vm:graph ;

	state:state [
		vm:graph [
			a atom:Tuple ;
			rdf:value (
				7 vm:opInput
				6 vm:opInput
				5 vm:opInput
				4 vm:opInput
				3 vm:opInput
				2 vm:opInput
				1 vm:opInput
				0 vm:opInput
			)
		]
	] .

# Plugin
vm:cv
	a lv2:Plugin,
		lv2:ConverterPlugin ;
	doap:name "VM CV" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:vm ;
	lv2:requiredFeature urid:map, work:schedule, state:loadDefaultState ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, log:log, state:threadSafeRestore ;
	lv2:extensionData state:interface, work:interface ;

	lv2:port [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports time:Position	,
			patch:Message ;
		lv2:index 0 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		lv2:designation lv2:control ;
		rsz:minimumSize 8192 ;
	] , [
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message ;
		lv2:index 1 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		lv2:designation lv2:control ;
		rsz:minimumSize 8192 ;
	] , [
	  a lv2:InputPort,
			lv2:CVPort;
		lv2:index 2 ;
		lv2:symbol "cv_in_0" ;
		lv2:name "CV In 0" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:CVPort;
		lv2:index 3 ;
		lv2:symbol "cv_in_1" ;
		lv2:name "CV In 1" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:CVPort;
		lv2:index 4 ;
		lv2:symbol "cv_in_2" ;
		lv2:name "CV In 2" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:CVPort;
		lv2:index 5 ;
		lv2:symbol "cv_in_3" ;
		lv2:name "CV In 3" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:CVPort;
		lv2:index 6 ;
		lv2:symbol "cv_in_4" ;
		lv2:name "CV In 4" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:CVPort;
		lv2:index 7 ;
		lv2:symbol "cv_in_5" ;
		lv2:name "CV In 5" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:CVPort;
		lv2:index 8 ;
		lv2:symbol "cv_in_6" ;
		lv2:name "CV In 6" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:CVPort;
		lv2:index 9 ;
		lv2:symbol "cv_in_7" ;
		lv2:name "CV In 7" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:OutputPort,
			lv2:CVPort;
		lv2:index 10 ;
		lv2:symbol "cv_out_0" ;
		lv2:name "CV Out 0" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:CVPort;
		lv2:index 11 ;
		lv2:symbol "cv_out_1" ;
		lv2:name "CV Out 1" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:CVPort;
		lv2:index 12 ;
		lv2:symbol "cv_out_2" ;
		lv2:name "CV Out 2" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:CVPort;
		lv2:index 13 ;
		lv2:symbol "cv_out_3" ;
		lv2:name "CV Out 3" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:CVPort;
		lv2:index 14 ;
		lv2:symbol "cv_out_4" ;
		lv2:name "CV Out 4" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:CVPort;
		lv2:index 15 ;
		lv2:symbol "cv_out_5" ;
		lv2:name "CV Out 5" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:CVPort;
		lv2:index 16 ;
		lv2:symbol "cv_out_6" ;
		lv2:name "CV Out 6" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:CVPort;
		lv2:index 17 ;
		lv2:symbol "cv_out_7" ;
		lv2:name "CV Out 7" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] ;

	#patch:writable
	#	vm:graph ;

	state:state [
		vm:graph [
			a atom:Tuple ;
			rdf:value (
				7 vm:opInput
				6 vm:opInput
				5 vm:opInput
				4 vm:opInput
				3 vm:opInput
				2 vm:opInput
				1 vm:opInput
				0 vm:opInput
			)
		]
	] .

# Plugin
vm:audio
	a lv2:Plugin,
		lv2:ConverterPlugin ;
	doap:name "VM Audio" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:vm ;
	lv2:requiredFeature urid:map, work:schedule, state:loadDefaultState ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, log:log, state:threadSafeRestore ;
	lv2:extensionData state:interface, work:interface ;

	lv2:port [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports time:Position	,
			patch:Message ;
		lv2:index 0 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		lv2:designation lv2:control ;
		rsz:minimumSize 8192 ;
	] , [
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message ;
		lv2:index 1 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		lv2:designation lv2:control ;
		rsz:minimumSize 8192 ;
	] , [
	  a lv2:InputPort,
			lv2:AudioPort;
		lv2:index 2 ;
		lv2:symbol "audio_in_0" ;
		lv2:name "Audio In 0" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:AudioPort;
		lv2:index 3 ;
		lv2:symbol "audio_in_1" ;
		lv2:name "Audio In 1" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:AudioPort;
		lv2:index 4 ;
		lv2:symbol "audio_in_2" ;
		lv2:name "Audio In 2" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:AudioPort;
		lv2:index 5 ;
		lv2:symbol "audio_in_3" ;
		lv2:name "Audio In 3" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:AudioPort;
		lv2:index 6 ;
		lv2:symbol "audio_in_4" ;
		lv2:name "Audio In 4" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:AudioPort;
		lv2:index 7 ;
		lv2:symbol "audio_in_5" ;
		lv2:name "Audio In 5" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:AudioPort;
		lv2:index 8 ;
		lv2:symbol "audio_in_6" ;
		lv2:name "Audio In 6" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort,
			lv2:AudioPort;
		lv2:index 9 ;
		lv2:symbol "audio_in_7" ;
		lv2:name "Audio In 7" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
		lv2:default 0.0;
	] , [
	  a lv2:OutputPort,
			lv2:AudioPort;
		lv2:index 10 ;
		lv2:symbol "audio_out_0" ;
		lv2:name "Audio Out 0" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:AudioPort;
		lv2:index 11 ;
		lv2:symbol "audio_out_1" ;
		lv2:name "Audio Out 1" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:AudioPort;
		lv2:index 12 ;
		lv2:symbol "audio_out_2" ;
		lv2:name "Audio Out 2" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:AudioPort;
		lv2:index 13 ;
		lv2:symbol "audio_out_3" ;
		lv2:name "Audio Out 3" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:AudioPort;
		lv2:index 14 ;
		lv2:symbol "audio_out_4" ;
		lv2:name "Audio Out 4" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:AudioPort;
		lv2:index 15 ;
		lv2:symbol "audio_out_5" ;
		lv2:name "Audio Out 5" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:AudioPort;
		lv2:index 16 ;
		lv2:symbol "audio_out_6" ;
		lv2:name "Audio Out 6" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] , [
	  a lv2:OutputPort,
			lv2:AudioPort;
		lv2:index 17 ;
		lv2:symbol "audio_out_7" ;
		lv2:name "Audio Out 7" ;
		lv2:minimum -1.0;
		lv2:maximum 1.0;
	] ;

	#patch:writable
	#	vm:graph ;

	state:state [
		vm:graph [
			a atom:Tuple ;
			rdf:value (
				7 vm:opInput
				6 vm:opInput
				5 vm:opInput
				4 vm:opInput
				3 vm:opInput
				2 vm:opInput
				1 vm:opInput
				0 vm:opInput
			)
		]
	] .

vm:add
	a pset:Preset ;
	lv2:appliesTo vm:control ,
		vm:cv ,
		vm:audio ;
	rdfs:label "Add" ;
	state:state [
		vm:graph [
			a atom:Tuple ;
			rdf:value (
				0 vm:opInput
				1 vm:opInput
				vm:opAdd
			)
		]
	] .

vm:sub
	a pset:Preset ;
	lv2:appliesTo vm:control ,
		vm:cv ,
		vm:audio ;
	rdfs:label "Subtract" ;
	state:state [
		vm:graph [
			a atom:Tuple ;
			rdf:value (
				0 vm:opInput
				1 vm:opInput
				vm:opSub
			)
		]
	] .

vm:mul
	a pset:Preset ;
	lv2:appliesTo vm:control ,
		vm:cv ,
		vm:audio ;
	rdfs:label "Multiply" ;
	state:state [
		vm:graph [
			a atom:Tuple ;
			rdf:value (
				0 vm:opInput
				1 vm:opInput
				vm:opMul
			)
		]
	] .

vm:div
	a pset:Preset ;
	lv2:appliesTo vm:control ,
		vm:cv ,
		vm:audio ;
	rdfs:label "Divide" ;
	state:state [
		vm:graph [
			a atom:Tuple ;
			rdf:value (
				0 vm:opInput
				1 vm:opInput
				vm:opDiv
			)
		]
	] .

vm:mod
	a pset:Preset ;
	lv2:appliesTo vm:control ,
		vm:cv ,
		vm:audio ;
	rdfs:label "Modulo" ;
	state:state [
		vm:graph [
			a atom:Tuple ;
			rdf:value (
				0 vm:opInput
				1 vm:opInput
				vm:opMod
			)
		]
	] .

vm:pow
	a pset:Preset ;
	lv2:appliesTo vm:control ,
		vm:cv ,
		vm:audio ;
	rdfs:label "Power" ;
	state:state [
		vm:graph [
			a atom:Tuple ;
			rdf:value (
				0 vm:opInput
				1 vm:opInput
				vm:opPow
			)
		]
	] .

vm:dBFS
	a pset:Preset ;
	lv2:appliesTo vm:control ,
		vm:cv ,
		vm:audio ;
	rdfs:label "dBFS" ;
	lv2:port [
		lv2:symbol "control_in_0" ;
		pset:value 0.5
	] ;
	state:state [
		vm:graph [
			a atom:Tuple ;
			rdf:value (
				# dBFS := Log10( |Control0| ) * 20.0
				0 vm:opInput
				vm:opAbs
				vm:opLog10
				20.0 vm:opMul
				70.0 vm:opDiv
			)
		]
	] .

vm:rand
	a pset:Preset ;
	lv2:appliesTo vm:control ,
		vm:cv ,
		vm:audio ;
	rdfs:label "Random" ;
	state:state [
		vm:graph [
			a atom:Tuple ;
			rdf:value (
				vm:opRand
				vm:opRand
				vm:opRand
				vm:opRand
				vm:opRand
				vm:opRand
				vm:opRand
				vm:opRand
			)
		]
	] .

vm:sampleAndHold
	a pset:Preset ;
	lv2:appliesTo vm:control ,
		vm:cv ,
		vm:audio ;
	rdfs:label "Sample and hold" ;
	state:state [
		vm:graph [
			a atom:Tuple ;
			rdf:value (
				# Reg0 := (Beat % 1 == 0) ? Rand : Reg0
				vm:opRand
				0 vm:opLoad
				time:barBeat vm:opModF vm:opPop
				0 vm:opEq vm:opTernary
				vm:opPush
				0 vm:opStore
			)
		]
	] .

vm:lfo
	a pset:Preset ;
	lv2:appliesTo vm:control ,
		vm:cv ,
		vm:audio ;
	rdfs:label "LFO" ;
	state:state [
		vm:graph [
			a atom:Tuple ;
			rdf:value (
				# Phase := (Beat % Cycles) / Control0
				2.0 # Cycles per beat
				vm:opPush
				time:beat
				vm:opSwap
				vm:opMod
				vm:opSwap
				vm:opDiv
				0 vm:opStore

				# SquareLFO := (Phase > 0.25) && (Phase < 0.75)
				0 vm:opLoad
				0.25 vm:opGt
				0 vm:opLoad
				0.75 vm:opLt
				vm:opAnd
				2.0 vm:opMul
				1.0 vm:opSub

				# TriangleLFO := (Phase > 0.5 ? (1.0 - Phase) : Phase) * 2.0
				1.0
				0 vm:opLoad
				vm:opSub
				0 vm:opLoad
				vm:opPush
				0.5 vm:opGt
				vm:opTernary
				2.0 vm:opMul
				2.0 vm:opMul
				1.0 vm:opSub

				# SineLFO := Sin( (Phase - 0.25) * 2.0 * PI) * 0.5 + 0.5
				0 vm:opLoad
				0.25 vm:opSub
				2.0 vm:opMul
				vm:opPi vm:opMul
				vm:opSin
				0.5 vm:opMul
				0.5 vm:opAdd
				2.0 vm:opMul
				1.0 vm:opSub

				# push phase
				0 vm:opLoad
				2.0 vm:opMul
				1.0 vm:opSub
			)
		]
	] .
